properties([parameters([string(description: 'Artifactory Server', name: 'artifactory_name', defaultValue: 'Unamed'),
                        string(description: 'Aritifactory Repository', name: 'artifactory.repo', defaultValue: 'Unamed'),
                        string(description: 'Conan Remote Server', name: 'serverName', defaultValue: 'conan_center'),
                        string(description: 'Build label', name: 'build_label', defaultValue: 'Unamed'),
                        string(description: 'User', name: 'username', defaultValue: 'jfrog'),                        
                        string(description: 'Channel', name: 'channel', defaultValue: 'stable'),
                        string(description: 'Name/Version', name: 'name_version', defaultValue: 'LIB_A/1.0'),
                        string(description: 'Profile', name: 'profile', defaultValue: './profiles/64bits'),
                        string(description: 'Config repository branch', name: 'conf_repo_branch', defaultValue: 'master'),
                        string(description: 'Config repository url', name: 'conf_repo_url', defaultValue: 'https://github.com/xingao0803/demo-multi-builds.git'),
                       ])])

node {
    
    currentBuild.displayName = params.build_label
    def buildInfo
    def data
    def conf_repo_dir
    def client

    withEnv(['PATH+JENKINSHOME=/usr/local/bin']) {
        def server
      
        stage("Configure/Get repositories"){

            dir("_conf_repo"){
                git branch: params.conf_repo_branch, url: params.conf_repo_url
                data = readYaml file: "conan_ci_conf.yml"
                conf_repo_dir = pwd()
            }
            server = Artifactory.server params.artifactory_name
            client = Artifactory.newConanClient()
          
            dir("_lib_repo"){
                git branch: data.repos[params.name_version].branch, url: data.repos[params.name_version].url
            }
        }
      
        stage("Build packages"){
            // For each profile
            dir("_lib_repo"){
                dir(data.repos[params.name_version].dir){
                    client.run(command: "create . " + params.username + "/" + params.channel + " -r " + params.serverName + " -pr \"" + conf_repo_dir + "/" + params.profile + "\"")
                }
            }
        }
        
        stage("Upload Artifactory"){
            String command = "upload * -r " + params.serverName + " --all -c --force"
            buildInfo = client.run(command: command)
            buildInfo.env.collect()
            server.publishBuildInfo buildInfo
        }
        
    }
}
